apply plugin: 'com.jfrog.bintray'

version = libraryVersion


//task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
//    classifier = 'javadoc'
//    from "$buildDir/javadoc"
//}


//artifacts {
////    archives javadocJar
//    archives sourcesJar
//}
allprojects {

    publishing {

        // custom tasks for creating source/javadoc jars
        task sourcesJar(type: Jar, dependsOn: classes) {
            classifier = 'sources'
            from sourceSets.main.allSource
        }

        // add source jar tasks as artifacts
        artifacts {
            archives sourcesJar
        }

        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourcesJar
            }
        }

        repositories {
            maven {
                url System.getProperty("deployUrl", "none")
                credentials {
                    username System.getProperty("deployUsername", "none")
                    password System.getProperty("deployPassword", "none")
                }
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getProperty('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getProperty('BINTRAY_API_KEY')

    configurations = ['archives']
    publish = true //If version should be auto published after an upload
//  dryRun = false //Whether to run this as dry-run, without deploying
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription

        websiteUrl = siteUrl
        vcsUrl = gitUrl
        issueTrackerUrl = issueUrl
        licenses = allLicenses
        labels = ['testerra', 'java', 'selenium', 'testng', 'test', 'testautomation', 'framework']
        publicDownloadNumbers = true
//      attributes= ['a': ['ay1', 'ay2'], 'b': ['bee'], c: 'cee'] //Optional package-level attributes
        version {
            desc = libraryDescription
//            released  = new java.util.Date() // 'optional, date of the version release' //2 possible values: date in the format of 'yyyy-MM-dd'T'HH:mm:ss.SSSZZ' OR a java.util.Date instance
//            gpg {
//                sign = true //Determines whether to GPG sign the files. The default is false
//                passphrase = properties.getProperty("bintray.gpg.password")
//                //Optional. The passphrase for GPG signing'
//            }
//             mavenCentralSync {
//                sync = false //Optional (true by default). Determines whether to sync the version to Maven Central.
//                user = 'userToken' //OSS user token
//                password = 'paasword' //OSS user password
//                close = '1' //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
//            }
        }
    }
}

bintrayUpload.dependsOn assemble
bintrayUpload.dependsOn sourcesJar
//bintrayUpload.dependsOn javadocJar
